
@use 'config' as cfg;
//--------------------------------------------------------------------
// TinyMCE style
//--------------------------------------------------------------------

@mixin highlighter-base() {
  font-style: normal;
  @content;
  background-repeat: no-repeat;
  background-position: 0% 100%;
  background-size: 100% 100%;
}

@mixin add-tinymce() {
  .text-highlighter {
    &-red {
      @include highlighter-base() {
        background: linear-gradient(180deg, rgba(#fc5c5c, 0) 50%, rgba(#fc5c5c, .5) 50%);
        &[data-rich-text-format-boundary]  {
          background-color: rgba(#fc5c5c, .25) !important;
        }
      }
    }
    &-orange {
      @include highlighter-base() {
        background: linear-gradient(180deg, rgba(#fd9926, 0) 50%, rgba(#fd9926, .5) 50%);
        &[data-rich-text-format-boundary]  {
          background-color: rgba(#fd9926, .25) !important;
        }
      }
    }
    &-yellow {
      @include highlighter-base() {
        background: linear-gradient(180deg, rgba(#f7f70e, 0) 50%, rgba(#f7f70e, .5) 50%);
        &[data-rich-text-format-boundary]  {
          background-color: rgba(#f7f70e, .25) !important;
        }
      }
    }
    &-green {
      @include highlighter-base() {
        background: linear-gradient(180deg, rgba(#6ce768, 0) 50%, rgba(#6ce768, .5) 50%);
        &[data-rich-text-format-boundary]  {
          background-color: rgba(#6ce768, .25) !important;
        }
      }
    }
    &-blue {
      @include highlighter-base() {
        background: linear-gradient(180deg, rgba(#7298e9, 0) 50%, rgba(#7298e9, .5) 50%);
        &[data-rich-text-format-boundary]  {
          background-color: rgba(#7298e9, .25) !important;
        }
      }
    }
    &-purple {
      @include highlighter-base() {
        background: linear-gradient(180deg, rgba(#c561ec, 0) 50%, rgba(#c561ec, .5) 50%);
        &[data-rich-text-format-boundary]  {
          background-color: rgba(#c561ec, .25) !important;
        }
      }
    }
    &-pink {
      @include highlighter-base() {
        background: linear-gradient(180deg, rgba(#f77dd2, 0) 50%, rgba(#f77dd2, .5) 50%);
        &[data-rich-text-format-boundary]  {
          background-color: rgba(#f77dd2, .25) !important;
        }
      }
    }
    &-sky {
      @include highlighter-base() {
        background: linear-gradient(180deg, rgba(#89d0ff, 0) 50%, rgba(#89d0ff, .5) 50%);
        &[data-rich-text-format-boundary]  {
          background-color: rgba(#89d0ff, .25) !important;
        }
      }
    }
    &-gray {
      @include highlighter-base() {
        background: linear-gradient(180deg, rgba(#cacaca, 0) 50%, rgba(#cacaca, .5) 50%);
        &[data-rich-text-format-boundary]  {
          background-color: rgba(#cacaca, .25) !important;
        }
      }
    }
  }
  .margin {
    &-top {
      &-lv1 {
        margin-top: 20px;
      }
      &-lv2 {
        margin-top: 35px;
        @include cfg.media-max(lg) {
          margin-bottom: 30px;
        }
      }
      &-lv3 {
        margin-top: 50px;
        @include cfg.media-max(lg) {
          margin-bottom: 40px;
        }
      }
    }
    &-bottom {
      &-lv1 {
      margin-bottom: 20px;
      }
      &-lv2 {
        margin-bottom: 35px;
      }
      &-lv3 {
        margin-bottom: 50px;
      }
    }
    &-left {
      margin-left: 30px;
      @include cfg.media-max(lg) {
        margin-left: 20px;
      }
    }
    &-right {
      margin-right: 30px;
      @include cfg.media-max(lg) {
        margin-right: 20px;
      }
    }
  }
  .line-height {
    &-narrow {
      &-lv1 {
        line-height: 1.5;
      }
      &-lv2 {
        line-height: 1.3;
      }
    }
  }
  .clear {
    clear: both;
    &fix {
      display: flow-root;
      &::after {
        display: block;
        content: '';
        clear: both;
      }
    }
    &-margin {
      margin: 0;
    }
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .block-center {
    text-align: center;
  }
  .section-block {
    display: flow-root;
    margin-bottom: 50px;
    @include cfg.media-max(lg) {
      margin-bottom: 40px;
    }
    &::after {
      display: block;
      content: '';
      clear: both;
    }
  }
}
